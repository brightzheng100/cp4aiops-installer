apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: vector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vector-agent
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: vector-agent-0.0.0
  name: vector-agent
  namespace: $NAMESPACE_HUMIO
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vector-agent
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: vector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vector-agent
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: vector-agent-0.0.0
  name: vector-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vector-agent
subjects:
- kind: ServiceAccount
  name: vector-agent
  namespace: $NAMESPACE_HUMIO
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vector-agent-config
  namespace: $NAMESPACE_HUMIO
data:
  vector-agent.toml: |
    # The Vector Kubernetes integration automatically defines a
    # `kubernetes_logs` source that is made available to you.
    # You do not need to define a log source.
    #[sources.kubernetes_logs]
    #type = "kubernetes_logs"

    [sinks.out]
    type = "humio_logs"
    inputs = [ "kubernetes_logs" ]
    host = "${HUMIO_SERVER}"
    token = "$HUMIO_INGEST_TOKEN"
    encoding.codec = "json"
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: vector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vector-agent
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: vector-agent-0.0.0
  name: vector-agent
  namespace: $NAMESPACE_HUMIO
data:
  managed.toml: |
    # References:
    # - https://docs.humio.com/docs/ingesting-data/data-shippers/vector/
    # - https://vector.dev/docs/

    # Data dir is location controlled at the `DaemonSet`.
    data_dir = "/var/lib/vector"

    # Ingest logs from Kubernetes.
    [sources.kubernetes_logs]
      type = "kubernetes_logs"

    [log_schema]
      host_key = "host"
      message_key = "message"
      source_type_key = "source_type"
      timestamp_key = "timestamp"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/instance: vector
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vector-agent
    app.kubernetes.io/version: 0.0.0
    helm.sh/chart: vector-agent-0.0.0
  name: vector-agent
  namespace: $NAMESPACE_HUMIO
spec:
  minReadySeconds: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: vector
      app.kubernetes.io/name: vector-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: vector
        app.kubernetes.io/name: vector-agent
        vector.dev/exclude: "true"
    spec:
      containers:
      - args:
        - --config
        - /etc/vector/*.toml
        env:
        - name: VECTOR_SELF_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: VECTOR_SELF_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: VECTOR_SELF_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOG
          value: info
        image: timberio/vector:0.11.X-debian
        imagePullPolicy: IfNotPresent
        name: vector
        ports: null
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/log/
          name: var-log
          readOnly: true
        - mountPath: /var/lib
          name: var-lib
          readOnly: true
        - mountPath: /vector-data-dir
          name: data-dir
        - mountPath: /etc/vector
          name: config-dir
          readOnly: true
      securityContext: {}
      serviceAccountName: vector-agent
      terminationGracePeriodSeconds: 60
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - hostPath:
          path: /var/log/
        name: var-log
      - hostPath:
          path: /var/lib/
        name: var-lib
      - hostPath:
          path: /var/lib/vector/
        name: data-dir
      - name: config-dir
        projected:
          sources:
          - configMap:
              name: vector-agent
          - configMap:
              name: vector-agent-config
              optional: true
          - secret:
              name: vector-agent-config
              optional: true
  updateStrategy:
    type: RollingUpdate